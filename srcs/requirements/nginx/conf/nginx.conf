# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    nginx.conf                                         :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: iderighe <marvin@42.fr>                    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2021/04/28 18:04:35 by iderighe          #+#    #+#              #
#    Updated: 2021/05/20 12:54:03 by iderighe         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
# server	{
# 		listen 80;
# 		listen [::]:80;
# 		server_name iderighe.42.fr;
# 		return 301 https://$server_name$request_uri;
# }

# SSL configuration (SSL = Secure Socket Layer)
server	{
		server_name iderighe.42.fr;
		fastcgi_param HTTPS on;

		listen 443 ssl;
		listen [::]:443 ssl;

		# Self signed certs generated by the ssl-cert package. Don't use them in a production server!
		ssl_certificate /etc/ssl/certs/nginx.crt;
		ssl_certificate_key /etc/ssl/certs/nginx.key;
		ssl_protocols TLSv1.3;

		root /var/www/html/wordpress;
		# root /var/www/html;

        # Add index.php to the list if you are using PHP
		index index.html index.htm index.php;

		# autoindex on;

		location / {
				#autoindex on;
# ATTENTION reecriture d'URL (URL rewriting nginx/wordpress)
				try_files $uri $uri/ /index.php?$args;
				# |-> C'est Wordpress qui enverra l'erreur 404 si besoin !
				# |-> First attempt to serve request as file, then as directory, then fall back to displaying a 404.
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
		# ~ |-> RegEx (regular expression)
		# Module ngx_http_fastcgi_module |-> http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_split_path_info
		location ~ \.php$ {
				fastcgi_split_path_info ^(.+\.php)(/.+)$;
				#	|-> defines a RegEx that captures a value for the variable #fastcgi_path_info, with two captures : the first
				# 		becomes the $fastcgi_script_name, the second becomes $fastcgi_path-info
				fastcgi_pass wordpress:9000;
				# 	|-> sets the adress of a FastCGI server. The address can be specified as a domain name or IP address AND a port
				fastcgi_index index.php;
				# 	|-> sets a file name that be appended after a URL ending with a slash, in the value of the $fastcgi_script_name variable
				#		example : URL = /page.php -> SCRIPT_FILENAME = .../page.php | URL = /page.php/ -> SCRIPT_FILENAME = .../index.php
				include fastcgi_params;
				# 	|-> pour pouvoir utiliser fastcgi_param ensuite
				fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
				fastcgi_param PATH_INFO $fastcgi_path_info;
				# try_files $uri $uri/ =404;
		}

		location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
				expires max;
				log_not_found off;
		}
}
